#!/bin/bash

# Based (almost entirely) on:
# http://pyramidthoughts.wordpress.com/2012/04/14/install-and-run-rvm-and-ruby-1-9-x-on-red-hat-openshift/

set -x

export rvm_prefix="${OPENSHIFT_DATA_DIR}"
export rvm_path="${OPENSHIFT_DATA_DIR}.rvm"

export RVM_INIT="${OPENSHIFT_DATA_DIR}.rvm/scripts/rvm"
export RUBY_VERSION="2.0.0-p0"

export TMOUT=5000

if [ ! -d "${rvm_path}" ] ; then

    echo progress-bar >> "${OPENSHIFT_DATA_DIR}.curlrc"
    # curl -L https://raw.github.com/xiy/rvm-openshift/master/binscripts/install-rvm-openshift.sh | bash -s
    HOME="${OPENSHIFT_DATA_DIR}"; curl -L https://get.rvm.io | bash -s --rails

    # echo "gem: --no-rdoc --no-ri" > ${OPENSHIFT_DATA_DIR}.gemrc
    # echo "gem: --no-rdoc --no-ri" > ${OPENSHIFT_REPO_DIR}.gemrc

	# # Build the env-variable
	# echo -n "${OPENSHIFT_DATA_DIR}.rbenv" > ~/.env/user_vars/rvm_path

 #    export CONFIGURE_OPTS="--disable-install-doc"
 #    echo -n "--disable-install-doc" > ~/.env/user_vars/CONFIGURE_OPTS

	# export RBENV_VERSION="RUBY_VERSION"
	# echo -n "RUBY_VERSION" > ~/.env/user_vars/RBENV_VERSION

    # These probably arent both necessary, but...
    # We'll see if we need them at all with 'rbenv global..'
    # echo ${RUBY_VERSION} > ${OPENSHIFT_REPO_DIR}.ruby-version
    # echo ${RUBY_VERSION} > ${OPENSHIFT_DATA_DIR}.ruby-version

    # Keep this shell working
    source $RVM_INIT
    # Add into runtime shells
    echo "source $RVM_INIT" >> "${OPENSHIFT_REPO_DIR}/.openshift/action_hooks/pre_start"
    # Make a sort of shortcut
    echo "source $RVM_INIT" > ~/.env/user_vars/rinit
    # Call it with just:
    # > $rinit

    # rbenv install $RUBY_VERSION
    # rbenv global $RUBY_VERSION

    echo "${rvm_prefix}" > ~/.env/user_vars/rvm_prefix
    echo "${rvm_path}" > ~/.env/user_vars/rvm_path

    # gem install bundler

    # echo ========= starting ruby install ========== >  "${OPENSHIFT_DATA_DIR}rubyinstall.txt"
    # echo "=== ( this is coffee break territory) ====" >>  "${OPENSHIFT_DATA_DIR}rubyinstall.txt"
    # tmux new-session -d -s install "rbenv install -v $RUBY_VERSION >> \"${OPENSHIFT_DATA_DIR}rubyinstall.txt\" ; echo done. >> \"${OPENSHIFT_DATA_DIR}rubyinstall.txt\" ; killall tail"
    # tail -f "${OPENSHIFT_DATA_DIR}rubyinstall.txt"

    # echo ========= setting version ========== >>  "${OPENSHIFT_DATA_DIR}rubyinstall.txt"
    # rbenv global $RUBY_VERSION | tee -a "${OPENSHIFT_DATA_DIR}rubyinstall.txt"

    echo Ruby version at $(ruby --version)
    # Duh. Can't install bundler until you've initialized renv in the shell, or it
    # just installs it to the system folder.
    # echo ========= starting bundler install ========== >>  "${OPENSHIFT_DATA_DIR}rubyinstall.txt"
    # gem install bundler | tee -a "${OPENSHIFT_DATA_DIR}rubyinstall.txt"

    echo "---
:update_sources: true
:benchmark: false
:backtrace: true
:verbose: true
gem: --no-ri --no-rdoc
install: --no-rdoc --no-ri
update:  --no-rdoc --no-ri" >  "${OPENSHIFT_DATA_DIR}.rvm/rubies/default/etc/gemrc"

fi


# bluepill_root   = ENV['BLUEPILL_ROOT']  || ENV["HOME"]
    export BLUEPILL_ROOT="${OPENSHIFT_DATA_DIR}"
    echo -n "${OPENSHIFT_DATA_DIR}" > ~/.env/user_vars/BLUEPILL_ROOT

# rails_env   = ENV['RAILS_ENV']  || "production"
    export RAILS_ENV="production"
    echo -n "production" > ~/.env/user_vars/RAILS_ENV

# rails_root  = ENV['RAILS_ROOT'] || "/var/rails/my_discourse"
    export RAILS_ROOT="${OPENSHIFT_REPO_DIR}"
    echo -n "${OPENSHIFT_REPO_DIR}" > ~/.env/user_vars/RAILS_ROOT

# user = ENV["DISCOURSE_USER"] || ENV['USER'] || 'user_running_app'
    export DISCOURSE_USER="${OPENSHIFT_APP_UUID}"
    echo -n "${OPENSHIFT_APP_UUID}" > ~/.env/user_vars/DISCOURSE_USER

# group = ENV["DISCOURSE_GROUP"] || ENV['GROUP'] || 'www-data'
    export DISCOURSE_GROUP="${OPENSHIFT_APP_UUID}"
    echo -n "${OPENSHIFT_APP_UUID}" > ~/.env/user_vars/DISCOURSE_GROUP

set +x