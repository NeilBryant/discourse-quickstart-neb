#This is production configuration for Openshift install, will be copied over production.rb on deploy

Discourse::Application.configure do
  config.action_mailer.delivery_method = :smtp

  # Amazon SES configuration
  config.action_mailer.smtp_settings = {
    :port =>           '25',
    :address =>        'email-smtp.us-east-1.amazonaws.com',
    :user_name =>      '',
    :password =>       '',
    :domain =>         'rhcloud.com',
    :authentication => :login,
    :enable_starttls_auto => true
  }

  # Sendgrid configuration
  #config.action_mailer.smtp_settings = {
  #  :address        => 'smtp.sendgrid.net',
  #  :port           => '587',
  #  :authentication => :plain,
  #  :user_name      => '',
  #  :password       => '',
  #  :domain         => 'rhcloud.com',
  #  :enable_starttls_auto => true
  #}

  # Settings specified here will take precedence over those in config/application.rb

  # Code is not reloaded between requests
  config.cache_classes = true

  # Full error reports are disabled and caching is turned on
  config.consider_all_requests_local       = false
  config.action_controller.perform_caching = true

  # Disable Rails's static asset server (Apache or nginx will already do this)
  config.serve_static_assets = false

  # Compress JavaScripts and CSS
  config.assets.compress = true

  # stuff should be pre-compiled
  config.assets.compile = false

  # Generate digests for assets URLs
  config.assets.digest = true

  # Specifies the header that your server uses for sending files
  config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for nginx

  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
  # the I18n.default_locale when a translation can not be found)
  config.i18n.fallbacks = true


  # you may use other configuration here for mail eg: sendgrid

  # Send deprecation notices to registered listeners
  config.active_support.deprecation = :notify

  # this will cause all handlebars templates to be pre-compiles, making your page faster
  config.handlebars.precompile = true

  # this setting enables rack_cache so it caches various requests in redis
  config.enable_rack_cache = true

  # allows admins to use mini profiler
  config.enable_mini_profiler = true

  # allows Cross-origin resource sharing (CORS) for API access in JavaScript (default to false for security).
  # See the initializer and https://github.com/cyu/rack-cors for configuration documentation.
  #
  # config.enable_rack_cors = false
  # config.rack_cors_origins = ['*']
  # config.rack_cors_resource = ['*', { :headers => :any, :methods => [:get, :post, :options] }]

  # Discourse strongly recommend you use a CDN.
  # For origin pull cdns all you need to do is register an account and configure
  # config.action_controller.asset_host = "http://YOUR_CDN_HERE"
end
